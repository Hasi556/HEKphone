# You can find more information about this file on the symfony website:
# http://www.symfony-project.org/reference/1_4/en/10-Routing

homepage:
  url:   /
  param: { module: calls, action: index }
  
login:
  url: /login
  param: {module: auth, action: index }
 
logout:
  url: /logout
  param: {module: auth, action: logout }
  
## list of all phones
phones:
  url: /phones
  param: {module: phone, action: index }
  
phone_new:
  url: /phone/new
  param: {module: phone, action: new}

phone_create:
  url: /phone/create
  param: {module: phone, action: create}

phone_edit:
  url: /phone/:id/edit
  param: {module: phone, action: edit }
  requirements:
    id: \d+
    
phone_update:
  url: /phone/:id/update
  param: {module: phone, action: update}
  requirements:
    id: \d+
      
phone_reset:
  url: /phone/:id/reset
  param: {module: phone, action: reset}
  requirements:
    id: \d+

phone_delete:
  url: /phone/:id/reset
  param: {module: phone, action: delete}
  requirements:
    id: \d+

    
## list of all groupcalls
groupcalls:
  url: /groupcalls
  param: {module: groupcalls, action: index}
  
groupcall_new:
  url: /groupcall/new
  param: {module: groupcalls, action: new}

groupcall_create:
  url: /groupcall/create
  param: {module: groupcalls, action: create}

groupcall_edit:
  url: /groupcall/:id/edit
  param: {module: groupcalls, action: edit }
  requirements:
    id: \d+
    
groupcall_update:
  url: /groupcall/:id/update
  param: {module: groupcalls, action: update}
  requirements:
    id: \d+
      
groupcall_reset:
  url: /groupcall/:id/reset
  param: {module: groupcalls, action: reset}
  requirements:
    id: \d+

groupcall_delete:
  url: /groupcall/:id/reset
  param: {module: groupcalls, action: delete}
  requirements:
    id: \d+

## list of all tasks
tasks:
  url: /tasks
  param: {module: tasks, action: index }

task_newBills:
  url: /tasks/bills/new
  param: {module: tasks, action: newBills}

task_newBills_simulate:
  url: /tasks/bills/simulate
  param: {module: tasks, action: simulateNewBills}

task_newBills_create:
  url: /tasks/bills/create
  param: {module: tasks, action: createNewBills}  
  
task_continueWithOldBills:
  url: /tasks/continue
  param: {module: tasks, action: continueWithOldBills}
  
task_newBills_chooseDate:
  url: /tasks/continue/chooseDate
  param: {module: tasks, action: chooseDate}

task_continueWithOldBills_getDtaus:
  url: /tasks/continue/getDtaus
  param: {module: tasks, action: getDtaus}
  

task_continueWithOldBills_markAsDone:
  url: /tasks/continue/markAsDone
  param: {module: tasks, action: markAsDone}
  
## unbilled calls and last bills of a resident
calls:
  url: /calls
  param: { module: calls, action: index}

# get the charges for a call to a specified destination
get_charges:
  url: /calls/charges
  param: { module: calls, action: getCharges }
 
# create a bill from the unbilled calls of a resident
create_bill_manually:
  url: /calls/unbilled/createbill
  param: {module: calls, action: createBillFromUnbilledCalls }
  
# display the details of a bill within the bills list
bill_detail:
  url:   /calls/bill/:billid
  param: { module: calls, action: index }
  requirements:
    billid: \d+
 
# send email to the resident of one call
send_bill_email:
  url: /calls/bill/:billid/sendBillEmail
  param: { module: calls, action: sendBillEmail }
  requirements:
    billid: \d+
 
      
## residents voicemessages
voicemail:
  url: /voicemail
  param: { module: voicemail, action: index}

voicemail_listen:
  url: /voicemail/:voicemailbox/message/:new/:messageid/listen
  param: {module: voicemail, action: listen}
  requirements:
    messageid: \d+
    voicemailbox: \d+
    
voicemail_markAsOld:
  url: /voicemail/:voicemailbox/message/:new/:messageid/markAsOld
  param: {module: voicemail, action: markAsOld}
  requirements:
    messageid: \d+
    voicemailbox: \d+

voicemail_markAsNew:
  url: /voicemail/:voicemailbox/message/:new/:messageid/markAsNew
  param: {module: voicemail, action: markAsNew}
  requirements:
    messageid: \d+
    voicemailbox: \d+
    
voicemail_delete:
  url: /voicemail/:voicemailbox/message/:new/:messageid/delete
  param: {module: voicemail, action: delete}
  requirements:
    messageid: \d+
    voicemailbox: \d+
        
## residents settings 
settings:
  url: /settings
  param: { module: settings, action: index}

settings_update:
  url: /settings/update
  param: {module: settings, action: update}

## Manage (admin) residents
residents:
  url:   /residents
  param: {module: resident, action:index, orderby: room}
  
resident_listByRoom:
  url:   /residents/byRoom
  param: {module: resident, action:index, orderby: room}

resident_listByName:
  url:   /resident/byName
  param: {module: resident, action:index, orderby: name}
  
resident_listByLastName:
  url:   /resident/byName
  param: {module: resident, action:index, orderby: name}


resident_listByMoveIn:
  url:   /resident/byMoveIn
  param: {module: resident, action:index, orderby: move_in}
    
resident_edit:
  url:   /resident/:residentid/edit
  param: {module: resident, action: edit }
  requirements: 
    residentid: \d+
  
resident_edit_plain:
  url:   /resident/:residentid
  param: {module: resident, action: edit }
  requirements: 
    residentid: \d+
    
resident_update:
  url:   /resident/:residentid/update
  param: {module: resident, action: update }
  requirements: 
    residentid: \d+

resident_lockOnFailedDebit:
  url:   /resident/:residentid/lockOnFailedDebit
  param: {module: resident, action: lockOnFailedDebit }
  requirements: 
    residentid: \d+
    
resident_resetPassword:
  url:   /resident/:residentid/resetPassword
  param: {module: resident, action: resetPassword }
  requirements: 
    residentid: \d+
    
# Access the users actions as if you where the user    
resident_calls:
  url:   /resident/:residentid/calls
  param: {module: calls, action: index }
  requirements: 
    residentid: \d+    
  
resident_voicemail:
  url:   /resident/:residentid/voicemail
  param: {module: voicemail, action:index  }
  requirements: 
    residentid: \d+    
    
resident_settings:
  url:   /resident/:residentid/settings
  param: {module: settings, action: index }
  requirements: 
    residentid: \d+    

resident_phone:
  url:   /resident/:residentid/phone
  param: {module: phone, action: edit}
  requirements: 
    residentid: \d+    

  
# CRUD for Phones
phone_editByRoomNo:
  url:   /room/:roomno/phone
  param: {module: phone, action: edit}
  requirements: 
    roomno: \d+      
  
# generic rules
# please, remove them by adding more specific rules
#default_index:
#  url:   /:module
#  param: { action: index }

#default:
#/  url:   /:module/:action/*
