<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Groupcalls', 'hekphone');

/**
 * BaseGroupcalls
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $extension
 * @property string $name
 * @property enum $mode
 * @property Doctrine_Collection $Residents
 * 
 * @method integer             getId()        Returns the current record's "id" value
 * @method string              getExtension() Returns the current record's "extension" value
 * @method string              getName()      Returns the current record's "name" value
 * @method enum                getMode()      Returns the current record's "mode" value
 * @method Doctrine_Collection getResidents() Returns the current record's "Residents" collection
 * @method Groupcalls          setId()        Sets the current record's "id" value
 * @method Groupcalls          setExtension() Sets the current record's "extension" value
 * @method Groupcalls          setName()      Sets the current record's "name" value
 * @method Groupcalls          setMode()      Sets the current record's "mode" value
 * @method Groupcalls          setResidents() Sets the current record's "Residents" collection
 * 
 * @package    hekphone
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseGroupcalls extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('groupcalls');
        $this->hasColumn('id', 'integer', 3, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => 3,
             ));
        $this->hasColumn('extension', 'string', 4, array(
             'type' => 'string',
             'unique' => true,
             'length' => 4,
             ));
        $this->hasColumn('name', 'string', 30, array(
             'type' => 'string',
             'length' => 30,
             ));
        $this->hasColumn('mode', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              0 => 'parallel',
              1 => 'serial',
             ),
             'default' => 'parallel',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Residents', array(
             'refClass' => 'ResidentsGroupcalls',
             'local' => 'groupcall_id',
             'foreign' => 'resident_id'));
    }
}