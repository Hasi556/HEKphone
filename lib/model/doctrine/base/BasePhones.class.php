<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Phones', 'hekphone');

/**
 * BasePhones
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property enum $technology
 * @property enum $type
 * @property string $host
 * @property string $mac
 * @property string $regserver
 * @property string $regseconds
 * @property string $ipaddr
 * @property string $port
 * @property string $fullcontact
 * @property string $useragent
 * @property string $lastms
 * @property string $web_interface_password
 * @property Doctrine_Collection $Rooms
 * 
 * @method integer             getId()                     Returns the current record's "id" value
 * @method enum                getTechnology()             Returns the current record's "technology" value
 * @method enum                getType()                   Returns the current record's "type" value
 * @method string              getHost()                   Returns the current record's "host" value
 * @method string              getMac()                    Returns the current record's "mac" value
 * @method string              getRegserver()              Returns the current record's "regserver" value
 * @method string              getRegseconds()             Returns the current record's "regseconds" value
 * @method string              getIpaddr()                 Returns the current record's "ipaddr" value
 * @method string              getPort()                   Returns the current record's "port" value
 * @method string              getFullcontact()            Returns the current record's "fullcontact" value
 * @method string              getUseragent()              Returns the current record's "useragent" value
 * @method string              getLastms()                 Returns the current record's "lastms" value
 * @method string              getWebInterfacePassword()   Returns the current record's "web_interface_password" value
 * @method Doctrine_Collection getRooms()                  Returns the current record's "Rooms" collection
 * @method Phones              setId()                     Sets the current record's "id" value
 * @method Phones              setTechnology()             Sets the current record's "technology" value
 * @method Phones              setType()                   Sets the current record's "type" value
 * @method Phones              setHost()                   Sets the current record's "host" value
 * @method Phones              setMac()                    Sets the current record's "mac" value
 * @method Phones              setRegserver()              Sets the current record's "regserver" value
 * @method Phones              setRegseconds()             Sets the current record's "regseconds" value
 * @method Phones              setIpaddr()                 Sets the current record's "ipaddr" value
 * @method Phones              setPort()                   Sets the current record's "port" value
 * @method Phones              setFullcontact()            Sets the current record's "fullcontact" value
 * @method Phones              setUseragent()              Sets the current record's "useragent" value
 * @method Phones              setLastms()                 Sets the current record's "lastms" value
 * @method Phones              setWebInterfacePassword()   Sets the current record's "web_interface_password" value
 * @method Phones              setRooms()                  Sets the current record's "Rooms" collection
 * 
 * @package    hekphone
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasePhones extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('phones');
        $this->hasColumn('id', 'integer', 11, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => 11,
             ));
        $this->hasColumn('technology', 'enum', 20, array(
             'type' => 'enum',
             'length' => 20,
             'values' => 
             array(
              0 => 'SIP',
              1 => 'DAHDI/g1',
              2 => 'DAHDI/g3',
             ),
             'notnull' => true,
             'default' => 'SIP',
             ));
        $this->hasColumn('type', 'enum', 6, array(
             'type' => 'enum',
             'length' => 6,
             'values' => 
             array(
              0 => 'user',
              1 => 'peer',
              2 => 'friend',
             ),
             'notnull' => true,
             'default' => 'friend',
             ));
        $this->hasColumn('host', 'string', 31, array(
             'type' => 'string',
             'notnull' => true,
             'default' => 'dynamic',
             'length' => 31,
             ));
        $this->hasColumn('mac', 'string', 20, array(
             'type' => 'string',
             'default' => '',
             'length' => 20,
             ));
        $this->hasColumn('regserver', 'string', 20, array(
             'type' => 'string',
             'length' => 20,
             ));
        $this->hasColumn('regseconds', 'string', 20, array(
             'type' => 'string',
             'length' => 20,
             ));
        $this->hasColumn('ipaddr', 'string', 15, array(
             'type' => 'string',
             'notnull' => true,
             'default' => '',
             'length' => 15,
             ));
        $this->hasColumn('port', 'string', 5, array(
             'type' => 'string',
             'unsigned' => true,
             'notnull' => true,
             'default' => '',
             'length' => 5,
             ));
        $this->hasColumn('fullcontact', 'string', 80, array(
             'type' => 'string',
             'notnull' => true,
             'default' => '',
             'length' => 80,
             ));
        $this->hasColumn('useragent', 'string', 20, array(
             'type' => 'string',
             'default' => '',
             'length' => 20,
             ));
        $this->hasColumn('lastms', 'string', 11, array(
             'type' => 'string',
             'default' => '',
             'length' => 11,
             ));
        $this->hasColumn('web_interface_password', 'string', 8, array(
             'type' => 'string',
             'default' => 'admin',
             'notnull' => true,
             'length' => 8,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Rooms', array(
             'local' => 'id',
             'foreign' => 'phone'));
    }
}