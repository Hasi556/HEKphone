<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('AsteriskCdr', 'hekphone');

/**
 * BaseAsteriskCdr
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property timestamp $calldate
 * @property string $clid
 * @property string $src
 * @property string $dst
 * @property string $dcontext
 * @property string $channel
 * @property string $dstchannel
 * @property string $lastapp
 * @property string $lastdata
 * @property integer $duration
 * @property integer $billsec
 * @property string $disposition
 * @property integer $amaflags
 * @property string $accountcode
 * @property string $uniqueid
 * @property string $userfield
 * @property Doctrine_Collection $Calls
 * 
 * @method timestamp           getCalldate()    Returns the current record's "calldate" value
 * @method string              getClid()        Returns the current record's "clid" value
 * @method string              getSrc()         Returns the current record's "src" value
 * @method string              getDst()         Returns the current record's "dst" value
 * @method string              getDcontext()    Returns the current record's "dcontext" value
 * @method string              getChannel()     Returns the current record's "channel" value
 * @method string              getDstchannel()  Returns the current record's "dstchannel" value
 * @method string              getLastapp()     Returns the current record's "lastapp" value
 * @method string              getLastdata()    Returns the current record's "lastdata" value
 * @method integer             getDuration()    Returns the current record's "duration" value
 * @method integer             getBillsec()     Returns the current record's "billsec" value
 * @method string              getDisposition() Returns the current record's "disposition" value
 * @method integer             getAmaflags()    Returns the current record's "amaflags" value
 * @method string              getAccountcode() Returns the current record's "accountcode" value
 * @method string              getUniqueid()    Returns the current record's "uniqueid" value
 * @method string              getUserfield()   Returns the current record's "userfield" value
 * @method Doctrine_Collection getCalls()       Returns the current record's "Calls" collection
 * @method AsteriskCdr         setCalldate()    Sets the current record's "calldate" value
 * @method AsteriskCdr         setClid()        Sets the current record's "clid" value
 * @method AsteriskCdr         setSrc()         Sets the current record's "src" value
 * @method AsteriskCdr         setDst()         Sets the current record's "dst" value
 * @method AsteriskCdr         setDcontext()    Sets the current record's "dcontext" value
 * @method AsteriskCdr         setChannel()     Sets the current record's "channel" value
 * @method AsteriskCdr         setDstchannel()  Sets the current record's "dstchannel" value
 * @method AsteriskCdr         setLastapp()     Sets the current record's "lastapp" value
 * @method AsteriskCdr         setLastdata()    Sets the current record's "lastdata" value
 * @method AsteriskCdr         setDuration()    Sets the current record's "duration" value
 * @method AsteriskCdr         setBillsec()     Sets the current record's "billsec" value
 * @method AsteriskCdr         setDisposition() Sets the current record's "disposition" value
 * @method AsteriskCdr         setAmaflags()    Sets the current record's "amaflags" value
 * @method AsteriskCdr         setAccountcode() Sets the current record's "accountcode" value
 * @method AsteriskCdr         setUniqueid()    Sets the current record's "uniqueid" value
 * @method AsteriskCdr         setUserfield()   Sets the current record's "userfield" value
 * @method AsteriskCdr         setCalls()       Sets the current record's "Calls" collection
 * 
 * @package    hekphone
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseAsteriskCdr extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('asterisk_cdr');
        $this->hasColumn('calldate', 'timestamp', null, array(
             'type' => 'timestamp',
             'notnull' => true,
             'default' => 'now()',
             ));
        $this->hasColumn('clid', 'string', null, array(
             'type' => 'string',
             'notnull' => true,
             ));
        $this->hasColumn('src', 'string', null, array(
             'type' => 'string',
             'notnull' => true,
             ));
        $this->hasColumn('dst', 'string', null, array(
             'type' => 'string',
             'notnull' => true,
             ));
        $this->hasColumn('dcontext', 'string', null, array(
             'type' => 'string',
             'notnull' => true,
             ));
        $this->hasColumn('channel', 'string', null, array(
             'type' => 'string',
             'notnull' => true,
             ));
        $this->hasColumn('dstchannel', 'string', null, array(
             'type' => 'string',
             'notnull' => true,
             ));
        $this->hasColumn('lastapp', 'string', null, array(
             'type' => 'string',
             'notnull' => true,
             'primary' => false,
             ));
        $this->hasColumn('lastdata', 'string', null, array(
             'type' => 'string',
             'notnull' => true,
             ));
        $this->hasColumn('duration', 'integer', 8, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => '0',
             'length' => 8,
             ));
        $this->hasColumn('billsec', 'integer', 8, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => '0',
             'length' => 8,
             ));
        $this->hasColumn('disposition', 'string', null, array(
             'type' => 'string',
             'notnull' => true,
             ));
        $this->hasColumn('amaflags', 'integer', 8, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => '0',
             'length' => 8,
             ));
        $this->hasColumn('accountcode', 'string', null, array(
             'type' => 'string',
             'notnull' => true,
             ));
        $this->hasColumn('uniqueid', 'string', null, array(
             'type' => 'string',
             'notnull' => true,
             'unique' => true,
             ));
        $this->hasColumn('userfield', 'string', null, array(
             'type' => 'string',
             'notnull' => true,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Calls', array(
             'local' => 'uniqueid',
             'foreign' => 'asterisk_uniqueid'));
    }
}