<?php

/**
 * AsteriskExtensionsTable
 *
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class AsteriskExtensionsTable extends Doctrine_Table
{
    /**
     * Returns an instance of this class.
     *
     * @return object AsteriskExtensionsTable
     */
    public static function getInstance()
    {
        return Doctrine_Core::getTable('AsteriskExtensions');
    }

    /**
     * Gets all extensions belonging to the group call with number
     * (extension like 1234) $groupCallNumber as DoctrineCollection
     * @param string $groupCallNumber An extension like 1234
     * @return Doctrine_Collection
     * @return bool false if the group calls does not exist.
     */
    private function getGroupCall($groupCallNumber) {

    }

    /**
     * Returns the list of extensions in the group call
     * @param string $groupCallNumber An extension like 1234
     * @return array With the extensions in the group call may be empty.
     * @return bool false if the group call does not exist
     */
    public function getGroupCallInfo($groupCallNumber) {

    }

    /**
     * Adds a residents extension to a group call.
     * @param unknown_type $resident
     * @param unknown_type $groupCallNumber
     */
    public function addToGroupCall($resident, $groupCallNumber) {

    }
    /**
     * Removes a residents extension from a group call.
     * If it was the last number in the group call, the group-call gets deleted.
     * @param unknown_type $resident
     * @param unknown_type $groupCallNumber
     * @return bool true If succeded, false if the the resident was not in the group call
     */
    public function removeFromGroupCall($resident, $groupCallNumber) {

    }

    /** Deletes the entire group call even if there are still extensions in it.
     * @param unknown_type $groupCallNumber
     */
    public function deleteGroupCall($groupCallNumber) {

    }

    /**
     * @param unknown_type $groupCallNumber
     */
    public function cleanGroupCall($groupCallNumber) {

    }

    /**
     * Deletes all entries in AsteriskExtension related to the phone $phone
     * @param Phones $phone
     */
    public function deletePhonesExtensions(Phones $phone)
    {
        $extensionPrefix = '8695';
        $this->createQuery()
            ->delete()
            ->where('exten = ?', $extensionPrefix . $phone->getExtension())
            ->orWhere('exten = ?', $phone->getExtension())
            ->execute();
    }

    /**
     * The function updates/creates the extension neccesary to dial a SIP-Phone.
     * If a resident is associated with the room, the extension is customized with
     * voicemailsettings etc.
     *
     * The extensions are generated in the context 'phones' which can be
     * included in the context 'locked' and 'unlocked' and 'amt' (which is
     * what you reach if you call from outside)
     *
     * @param Phones $phone
     * @return bool
     */
    public function updatePhonesExtensions(Phones $phone)
    {
        if( ! $arrayExtensions = $phone->getExtensionsAsArray()) {
            return false;
        }

        // Insert the new extension in the database: //
        $collExtensions = Doctrine_Collection::create('AsteriskExtensions');
        $collExtensions->fromArray($arrayExtensions);
        $collExtensions->save();

        return true;
    }
}