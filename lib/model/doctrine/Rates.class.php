<?php

/**
 * Rates
 *
 * This class has been auto-generated by the Doctrine ORM Framework
 *
 * @package    hekphone
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */

class Rates extends BaseRates
{
    /**
     * fetches the charge for a given date and a given length of a call
     *
     * @param $duration [sec]
     * @param $date [date] (defaults to now)
     * @return integer [euro cents]
     */
    public function getCharge($duration, $date="now") {
        if ($date == "now")
            $date = date("H:i:s", time());

        if ( ! $timestamp = strtotime($date)) {
            throw new Exception("$date is an invalid date.");
        }

        $time = date("H:i:s", $timestamp);
        if ($time <= $this->primary_time_begin || $time >=$this->secondary_time_begin && $this->secondary_time_begin != NULL) {
            $rate = $this->secondary_time_rate;
        } else {
            $rate = $this->primary_time_rate;
        }

        // pulsing is of the format 'N/M' where N/M <= 60
        // N represents the pulsing in the first minute,
        // M represents the pulsing in the follwing minutes
        // This script assumes, that N/M are divisors of 60 so as
        // soon as the call is longer then 1 minute we only look at
        // the M-Pulsing.
        $charge = 0;
        $pulsing = explode('/', $this->pulsing);
        $fullMinutes = floor($duration/60);
        $additionalSeconds = $duration%60;
        $charge = $fullMinutes*$rate;
        if ( $fullMinutes == 0 ) {
            $charge += ceil($additionalSeconds/(60/$pulsing[0]))*$rate/60*60/$pulsing[0];
        } else {
            $charge += ceil($additionalSeconds/(60/$pulsing[1]))*$rate/60*60/$pulsing[1];
        }

        return $charge;
    }
}