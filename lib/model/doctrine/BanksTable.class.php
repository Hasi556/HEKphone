<?php
$bavLibDir = implode(DIRECTORY_SEPARATOR, array(sfConfig::get('sf_lib_dir'), 'vendor', 'bav' ));
require_once $bavLibDir . '/classes/autoloader/BAV_Autoloader.php';
BAV_Autoloader::add($bavLibDir . '/classes/dataBackend/BAV_DataBackend_PDO.php');

/**
 * BanksTable
 *
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class BanksTable extends Doctrine_Table
{
    /**
     * Returns an instance of this class.
     *
     * @return object BanksTable
     */
    public static function getInstance()
    {
        return Doctrine_Core::getTable('Banks');
    }

    /**
     * Uses BAV to get new bank codes from the Bundesbank website and insert them in the database
     *
     * @throws BAV_DataBackendException
     */
    public static function updateData()
    {
        $databackend = new BAV_DataBackend_PDO(new PDO(sfConfig::get('bavPdoDriver')
                                                        . ':host=' . sfConfig::get('bavHost')
                                                        . ';dbname=' . sfConfig::get('bavDatabase'),
                                                      sfConfig::get('bavUsername'),
                                                      sfConfig::get('bavPassword')));
        $databackend->update();
    }

    /**
     * Wrapper for the BAV install script which generates the database structure
     * needed for the BAV_PDO backend. Throw exceptions if the structure exists
     * already. Call it once before calling updateData()
     *
     * @throws BAV_DataBackendException
     */
    public static function install()
    {
        $databackend = new BAV_DataBackend_PDO(new PDO(sfConfig::get('bavPdoDriver')
                                                        . ':host=' . sfConfig::get('bavHost')
                                                        . ';dbname=' . sfConfig::get('bavDatabase'),
                                                      sfConfig::get('bavUsername'),
                                                      sfConfig::get('bavPassword')));
        $databackend->install();
    }
}