<?php

/**
 * BillsTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class BillsTable extends Doctrine_Table
{
    /**
     * Returns an instance of this class.
     *
     * @return object BillsTable
     */
    public static function getInstance()
    {
        return Doctrine_Core::getTable('Bills');
    }
    

     /**
     * All unbillded calls are billed and the bill id is set to the now billed call
     * @param string $options['fromDate'] Start date for bill period
     * @param string $options['toDate'] End date for the bill period
     * @return boolean
     */  
    public function createBills($start, $end)
    {
        //fetch all unbilled calls from the given time period
        $unbilledCalls = Doctrine_Query::create()
                            ->from('Calls')
                            ->addWhere('bill is null')
                            ->addWhere('date <= ?', $end)
                            ->addWhere('date >= ?', $start);
        
        if ( ! $unbilledCalls = $unbilledCalls->execute())
        {
            //if there are no unbilled calls, false is returned	
            
            return false;
        }
        
        //Calculate the amount of all unbilled calls for one resident
        foreach ($unbilledCalls as $unbilledCall)
        {
        	$sums[$unbilledCall['resident']] += $unbilledCall['charges'];
        	
        }
        
        if ( ! isset($sums)){
            // If there are unbilled calls but all free calls, false is returned      
            
            return false;
        }
        
        foreach ($sums as $residentid => $amount)
        {
        	//Prepare the bills for each resident
        	$billsArray[] = array(
        	               'resident'  => $residentid,
        	               'amount'    => $amount,
        	               'date'      => date("Y-m-d") 
        	 );
        }
        
        //Create the bills and save into the database. $billsCollection now contains the bill id
        $billsCollection = new BillsCollection('Bills'); 
        $billsCollection->fromArray($billsArray);
        $billsCollection->save();
        
        //print_r($billsCollection->toArray());
        //Assign the bill id to the now billed calls 
           
        $billsArray = $billsCollection->toArray();
        foreach ($unbilledCalls as $key => $unbilledCall)
        {
        	foreach ($billsArray as $bill)
        	{
        	   if($unbilledCall['resident'] == $bill['resident'])
        	   {
        	   	$currentBillId = $bill['id'];
        	   }
        	}        	
        	$unbilledCalls[$key]->set('bill', $currentBillId);        	
        }
        //print_r($unbilledCalls->toArray());
        $unbilledCalls->save(); 

        //get for each bill and unlocked resident the String with the itemized bill information
        $billsCollection->loadRelated('Calls');       
        foreach ($billsCollection as $bill)
         {
         	if ($bill['Residents']['unlocked'] == true)
         	{
         	  echo $bill->getItemizedBill();
            //TODO: Send bill via mail	
         	}
            
         }
        
         return $billsCollection->getDtaus($start, $end);
    }
}